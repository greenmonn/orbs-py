{
  "{\"sourceRoot\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid\",\"filename\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid",
      "filename": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match.spec.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
        "sourceFileName": "match.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// selenium + mocha test for target behavior + DOM Tree matching\n// preserve visuals: compare DOM element (in interested area)\n// preserve behaviors: compare difference in DOM element\nvar fs = require(\"fs\");\n\nvar _require = require(\"selenium-webdriver\"),\n    Builder = _require.Builder,\n    By = _require.By,\n    Key = _require.Key,\n    until = _require.until;\n\nvar chrome = require(\"selenium-webdriver/chrome\");\n\nfunction findDiff(str1, str2) {\n  var diff1 = \"\";\n  var diff2 = \"\";\n  str2.split(\"\").forEach(function (val, i) {\n    if (val != str1.charAt(i)) {\n      diff1 += val;\n      diff2 += str1.charAt(i);\n    }\n  });\n  return [diff1, diff2];\n}\n\nfunction recordTargetObject(_x, _x2) {\n  return _recordTargetObject.apply(this, arguments);\n}\n\nfunction _recordTargetObject() {\n  _recordTargetObject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(driver, targetElement) {\n    var outerHtml, properties, targetObject, i, value, childrens, _i, elem, childHtml, childProperties, child, _i2, _value;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return targetElement.getAttribute(\"outerHTML\");\n\n          case 2:\n            outerHtml = _context2.sent;\n            _context2.next = 5;\n            return driver.executeScript(\"return window.getComputedStyle(arguments[0], null);\", targetElement);\n\n          case 5:\n            properties = _context2.sent;\n            // Contains all children's information as well\n            targetObject = {\n              html: outerHtml,\n              cssProps: {},\n              childProps: []\n            }; // console.log(`${properties}`);\n\n            i = 0;\n\n          case 8:\n            if (!(i < properties.length)) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 11;\n            return targetElement.getCssValue(properties[i]);\n\n          case 11:\n            value = _context2.sent;\n            // console.log(`${properties[i]}: ${value}`);\n            targetObject.cssProps[properties[i]] = value;\n\n          case 13:\n            i++;\n            _context2.next = 8;\n            break;\n\n          case 16:\n            _context2.next = 18;\n            return targetElement.findElements(By.xpath(\".//*\"));\n\n          case 18:\n            childrens = _context2.sent;\n            console.log(\"\".concat(childrens.length));\n            _i = 0;\n\n          case 21:\n            if (!(_i < childrens.length)) {\n              _context2.next = 43;\n              break;\n            }\n\n            elem = childrens[_i];\n            _context2.next = 25;\n            return elem.getAttribute(\"outerHTML\");\n\n          case 25:\n            childHtml = _context2.sent;\n            _context2.next = 28;\n            return driver.executeScript(\"return window.getComputedStyle(arguments[0], null);\", elem);\n\n          case 28:\n            childProperties = _context2.sent;\n            child = {};\n            _i2 = 0;\n\n          case 31:\n            if (!(_i2 < childProperties.length)) {\n              _context2.next = 39;\n              break;\n            }\n\n            _context2.next = 34;\n            return elem.getCssValue(childProperties[_i2]);\n\n          case 34:\n            _value = _context2.sent;\n            // console.log(`${childProperties[i]}: ${value}`);\n            child[childProperties[_i2]] = _value;\n\n          case 36:\n            _i2++;\n            _context2.next = 31;\n            break;\n\n          case 39:\n            targetObject.childProps.push(child);\n\n          case 40:\n            _i++;\n            _context2.next = 21;\n            break;\n\n          case 43:\n            return _context2.abrupt(\"return\", targetObject);\n\n          case 44:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _recordTargetObject.apply(this, arguments);\n}\n\n(function () {\n  var _checkMatch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var screen, driver, targetElement, targetObject, actions, targetObjectAfterAction, trajectory, current;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            screen = {\n              width: 640,\n              height: 480\n            };\n            _context.next = 3;\n            return new Builder().forBrowser(\"chrome\").setChromeOptions(new chrome.Options().headless().windowSize(screen)).build();\n\n          case 3:\n            driver = _context.sent;\n            _context.next = 6;\n            return driver.get(\"http://localhost:8080/intermediate.html\");\n\n          case 6:\n            _context.next = 8;\n            return driver.findElement(By.className(\"download\"));\n\n          case 8:\n            targetElement = _context.sent;\n            _context.next = 11;\n            return recordTargetObject(driver, targetElement);\n\n          case 11:\n            targetObject = _context.sent;\n            actions = driver.actions();\n            _context.next = 15;\n            return actions.move({\n              origin: targetElement\n            }).perform();\n\n          case 15:\n            _context.next = 17;\n            return recordTargetObject(driver, targetElement);\n\n          case 17:\n            targetObjectAfterAction = _context.sent;\n            // TODO: Need to be improved: save initial target element DOM and differences after\n            // Currently, simply save initial and after event DOM state for the target element (do not catch outside changes)\n            // If not use diff: should compare all DOM tree.. which is too costly\n            // How to capture diff? we should be able to captre dom modification callback event\n            trajectory = {\n              initial: targetObject,\n              afterAction: targetObjectAfterAction\n            }; // console.log(`${outerHtml}`);\n\n            current = JSON.stringify(trajectory);\n            fs.readFile(\"targetElement.json\", function (err, reference) {\n              if (err) {\n                console.log(err);\n              }\n\n              reference = reference.toString();\n\n              if (current == reference) {\n                console.log(\"[Criteria Match] Target element remains the same\");\n              } else {\n                console.log(\"[Not Match] Target element changed\");\n                var diffs = findDiff(current, reference); // TODO: more smart diff function\n\n                console.log(diffs[0]);\n                console.log(diffs[1]);\n              }\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  function checkMatch() {\n    return _checkMatch.apply(this, arguments);\n  }\n\n  return checkMatch;\n})()();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1hdGNoLnNwZWMuanMiXSwibmFtZXMiOlsiZnMiLCJyZXF1aXJlIiwiQnVpbGRlciIsIkJ5IiwiS2V5IiwidW50aWwiLCJjaHJvbWUiLCJmaW5kRGlmZiIsInN0cjEiLCJzdHIyIiwiZGlmZjEiLCJkaWZmMiIsInNwbGl0IiwiZm9yRWFjaCIsInZhbCIsImkiLCJjaGFyQXQiLCJyZWNvcmRUYXJnZXRPYmplY3QiLCJkcml2ZXIiLCJ0YXJnZXRFbGVtZW50IiwiZ2V0QXR0cmlidXRlIiwib3V0ZXJIdG1sIiwiZXhlY3V0ZVNjcmlwdCIsInByb3BlcnRpZXMiLCJ0YXJnZXRPYmplY3QiLCJodG1sIiwiY3NzUHJvcHMiLCJjaGlsZFByb3BzIiwibGVuZ3RoIiwiZ2V0Q3NzVmFsdWUiLCJ2YWx1ZSIsImZpbmRFbGVtZW50cyIsInhwYXRoIiwiY2hpbGRyZW5zIiwiY29uc29sZSIsImxvZyIsImVsZW0iLCJjaGlsZEh0bWwiLCJjaGlsZFByb3BlcnRpZXMiLCJjaGlsZCIsInB1c2giLCJzY3JlZW4iLCJ3aWR0aCIsImhlaWdodCIsImZvckJyb3dzZXIiLCJzZXRDaHJvbWVPcHRpb25zIiwiT3B0aW9ucyIsImhlYWRsZXNzIiwid2luZG93U2l6ZSIsImJ1aWxkIiwiZ2V0IiwiZmluZEVsZW1lbnQiLCJjbGFzc05hbWUiLCJhY3Rpb25zIiwibW92ZSIsIm9yaWdpbiIsInBlcmZvcm0iLCJ0YXJnZXRPYmplY3RBZnRlckFjdGlvbiIsInRyYWplY3RvcnkiLCJpbml0aWFsIiwiYWZ0ZXJBY3Rpb24iLCJjdXJyZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsInJlYWRGaWxlIiwiZXJyIiwicmVmZXJlbmNlIiwidG9TdHJpbmciLCJkaWZmcyIsImNoZWNrTWF0Y2giXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBRUE7QUFDQTtBQUNBLElBQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O2VBQ29DQSxPQUFPLENBQUMsb0JBQUQsQztJQUFuQ0MsTyxZQUFB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LENBQVlpQyxLQUFLLENBQUMsQ0FBRCxDQUFqQjtBQUNIO0FBQ0osYUFoQkQ7O0FBckNIO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBLEdBQUQ7O0FBQUEsV0FBZ0JDLFVBQWhCO0FBQUE7QUFBQTs7QUFBQSxTQUFnQkEsVUFBaEI7QUFBQSIsInNvdXJjZVJvb3QiOiIvVXNlcnMvanV5ZW9ueW9vbi9Qcm9qZWN0cy9vcmJzLXB5L3RhcmdldC90aHJlZV9jb2x1bW5fbGF5b3V0X2xpcXVpZC8iLCJzb3VyY2VzQ29udGVudCI6WyIvLyBzZWxlbml1bSArIG1vY2hhIHRlc3QgZm9yIHRhcmdldCBiZWhhdmlvciArIERPTSBUcmVlIG1hdGNoaW5nXG5cbi8vIHByZXNlcnZlIHZpc3VhbHM6IGNvbXBhcmUgRE9NIGVsZW1lbnQgKGluIGludGVyZXN0ZWQgYXJlYSlcbi8vIHByZXNlcnZlIGJlaGF2aW9yczogY29tcGFyZSBkaWZmZXJlbmNlIGluIERPTSBlbGVtZW50XG5jb25zdCBmcyA9IHJlcXVpcmUoXCJmc1wiKTtcbmNvbnN0IHsgQnVpbGRlciwgQnksIEtleSwgdW50aWwgfSA9IHJlcXVpcmUoXCJzZWxlbml1bS13ZWJkcml2ZXJcIik7XG5jb25zdCBjaHJvbWUgPSByZXF1aXJlKFwic2VsZW5pdW0td2ViZHJpdmVyL2Nocm9tZVwiKTtcblxuZnVuY3Rpb24gZmluZERpZmYoc3RyMSwgc3RyMikge1xuICAgIGxldCBkaWZmMSA9IFwiXCI7XG4gICAgbGV0IGRpZmYyID0gXCJcIjtcbiAgICBzdHIyLnNwbGl0KFwiXCIpLmZvckVhY2goZnVuY3Rpb24gKHZhbCwgaSkge1xuICAgICAgICBpZiAodmFsICE9IHN0cjEuY2hhckF0KGkpKSB7XG4gICAgICAgICAgICBkaWZmMSArPSB2YWw7XG4gICAgICAgICAgICBkaWZmMiArPSBzdHIxLmNoYXJBdChpKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBbZGlmZjEsIGRpZmYyXTtcbn1cblxuYXN5bmMgZnVuY3Rpb24gcmVjb3JkVGFyZ2V0T2JqZWN0KGRyaXZlciwgdGFyZ2V0RWxlbWVudCkge1xuICAgIGxldCBvdXRlckh0bWwgPSBhd2FpdCB0YXJnZXRFbGVtZW50LmdldEF0dHJpYnV0ZShcIm91dGVySFRNTFwiKTtcbiAgICBsZXQgcHJvcGVydGllcyA9IGF3YWl0IGRyaXZlci5leGVjdXRlU2NyaXB0KFxuICAgICAgICBcInJldHVybiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShhcmd1bWVudHNbMF0sIG51bGwpO1wiLFxuICAgICAgICB0YXJnZXRFbGVtZW50XG4gICAgKTtcblxuICAgIC8vIENvbnRhaW5zIGFsbCBjaGlsZHJlbidzIGluZm9ybWF0aW9uIGFzIHdlbGxcbiAgICBjb25zdCB0YXJnZXRPYmplY3QgPSB7XG4gICAgICAgIGh0bWw6IG91dGVySHRtbCxcbiAgICAgICAgY3NzUHJvcHM6IHt9LFxuICAgICAgICBjaGlsZFByb3BzOiBbXSxcbiAgICB9O1xuXG4gICAgLy8gY29uc29sZS5sb2coYCR7cHJvcGVydGllc31gKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHByb3BlcnRpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgbGV0IHZhbHVlID0gYXdhaXQgdGFyZ2V0RWxlbWVudC5nZXRDc3NWYWx1ZShwcm9wZXJ0aWVzW2ldKTtcbiAgICAgICAgLy8gY29uc29sZS5sb2coYCR7cHJvcGVydGllc1tpXX06ICR7dmFsdWV9YCk7XG4gICAgICAgIHRhcmdldE9iamVjdC5jc3NQcm9wc1twcm9wZXJ0aWVzW2ldXSA9IHZhbHVlO1xuICAgIH1cblxuICAgIGNvbnN0IGNoaWxkcmVucyA9IGF3YWl0IHRhcmdldEVsZW1lbnQuZmluZEVsZW1lbnRzKEJ5LnhwYXRoKFwiLi8vKlwiKSk7XG5cbiAgICBjb25zb2xlLmxvZyhgJHtjaGlsZHJlbnMubGVuZ3RofWApO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hpbGRyZW5zLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGxldCBlbGVtID0gY2hpbGRyZW5zW2ldO1xuICAgICAgICBsZXQgY2hpbGRIdG1sID0gYXdhaXQgZWxlbS5nZXRBdHRyaWJ1dGUoXCJvdXRlckhUTUxcIik7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKGAke2NoaWxkSHRtbH1gKTtcbiAgICAgICAgbGV0IGNoaWxkUHJvcGVydGllcyA9IGF3YWl0IGRyaXZlci5leGVjdXRlU2NyaXB0KFxuICAgICAgICAgICAgXCJyZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUoYXJndW1lbnRzWzBdLCBudWxsKTtcIixcbiAgICAgICAgICAgIGVsZW1cbiAgICAgICAgKTtcblxuICAgICAgICBsZXQgY2hpbGQgPSB7fTtcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjaGlsZFByb3BlcnRpZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGxldCB2YWx1ZSA9IGF3YWl0IGVsZW0uZ2V0Q3NzVmFsdWUoY2hpbGRQcm9wZXJ0aWVzW2ldKTtcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGAke2NoaWxkUHJvcGVydGllc1tpXX06ICR7dmFsdWV9YCk7XG4gICAgICAgICAgICBjaGlsZFtjaGlsZFByb3BlcnRpZXNbaV1dID0gdmFsdWU7XG4gICAgICAgIH1cblxuICAgICAgICB0YXJnZXRPYmplY3QuY2hpbGRQcm9wcy5wdXNoKGNoaWxkKTtcbiAgICB9XG5cbiAgICByZXR1cm4gdGFyZ2V0T2JqZWN0O1xufVxuXG4oYXN5bmMgZnVuY3Rpb24gY2hlY2tNYXRjaCgpIHtcbiAgICBjb25zdCBzY3JlZW4gPSB7XG4gICAgICAgIHdpZHRoOiA2NDAsXG4gICAgICAgIGhlaWdodDogNDgwLFxuICAgIH07XG5cbiAgICBsZXQgZHJpdmVyID0gYXdhaXQgbmV3IEJ1aWxkZXIoKVxuICAgICAgICAuZm9yQnJvd3NlcihcImNocm9tZVwiKVxuICAgICAgICAuc2V0Q2hyb21lT3B0aW9ucyhuZXcgY2hyb21lLk9wdGlvbnMoKS5oZWFkbGVzcygpLndpbmRvd1NpemUoc2NyZWVuKSlcbiAgICAgICAgLmJ1aWxkKCk7XG5cbiAgICBhd2FpdCBkcml2ZXIuZ2V0KFwiaHR0cDovL2xvY2FsaG9zdDo4MDgwL2ludGVybWVkaWF0ZS5odG1sXCIpO1xuICAgIGNvbnN0IHRhcmdldEVsZW1lbnQgPSBhd2FpdCBkcml2ZXIuZmluZEVsZW1lbnQoQnkuY2xhc3NOYW1lKFwiZG93bmxvYWRcIikpO1xuICAgIC8vIGF3YWl0IHRhcmdldEVsZW1lbnQuY2xpY2soKTtcblxuICAgIGNvbnN0IHRhcmdldE9iamVjdCA9IGF3YWl0IHJlY29yZFRhcmdldE9iamVjdChkcml2ZXIsIHRhcmdldEVsZW1lbnQpO1xuXG4gICAgY29uc3QgYWN0aW9ucyA9IGRyaXZlci5hY3Rpb25zKCk7XG4gICAgYXdhaXQgYWN0aW9ucy5tb3ZlKHsgb3JpZ2luOiB0YXJnZXRFbGVtZW50IH0pLnBlcmZvcm0oKTtcblxuICAgIGNvbnN0IHRhcmdldE9iamVjdEFmdGVyQWN0aW9uID0gYXdhaXQgcmVjb3JkVGFyZ2V0T2JqZWN0KFxuICAgICAgICBkcml2ZXIsXG4gICAgICAgIHRhcmdldEVsZW1lbnRcbiAgICApO1xuXG4gICAgLy8gVE9ETzogTmVlZCB0byBiZSBpbXByb3ZlZDogc2F2ZSBpbml0aWFsIHRhcmdldCBlbGVtZW50IERPTSBhbmQgZGlmZmVyZW5jZXMgYWZ0ZXJcbiAgICAvLyBDdXJyZW50bHksIHNpbXBseSBzYXZlIGluaXRpYWwgYW5kIGFmdGVyIGV2ZW50IERPTSBzdGF0ZSBmb3IgdGhlIHRhcmdldCBlbGVtZW50IChkbyBub3QgY2F0Y2ggb3V0c2lkZSBjaGFuZ2VzKVxuICAgIC8vIElmIG5vdCB1c2UgZGlmZjogc2hvdWxkIGNvbXBhcmUgYWxsIERPTSB0cmVlLi4gd2hpY2ggaXMgdG9vIGNvc3RseVxuICAgIC8vIEhvdyB0byBjYXB0dXJlIGRpZmY/IHdlIHNob3VsZCBiZSBhYmxlIHRvIGNhcHRyZSBkb20gbW9kaWZpY2F0aW9uIGNhbGxiYWNrIGV2ZW50XG5cbiAgICBjb25zdCB0cmFqZWN0b3J5ID0ge1xuICAgICAgICBpbml0aWFsOiB0YXJnZXRPYmplY3QsXG4gICAgICAgIGFmdGVyQWN0aW9uOiB0YXJnZXRPYmplY3RBZnRlckFjdGlvbixcbiAgICB9O1xuXG4gICAgLy8gY29uc29sZS5sb2coYCR7b3V0ZXJIdG1sfWApO1xuICAgIGNvbnN0IGN1cnJlbnQgPSBKU09OLnN0cmluZ2lmeSh0cmFqZWN0b3J5KTtcbiAgICBmcy5yZWFkRmlsZShcInRhcmdldEVsZW1lbnQuanNvblwiLCAoZXJyLCByZWZlcmVuY2UpID0+IHtcbiAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHJlZmVyZW5jZSA9IHJlZmVyZW5jZS50b1N0cmluZygpO1xuXG4gICAgICAgIGlmIChjdXJyZW50ID09IHJlZmVyZW5jZSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coXCJbQ3JpdGVyaWEgTWF0Y2hdIFRhcmdldCBlbGVtZW50IHJlbWFpbnMgdGhlIHNhbWVcIik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIltOb3QgTWF0Y2hdIFRhcmdldCBlbGVtZW50IGNoYW5nZWRcIik7XG4gICAgICAgICAgICBsZXQgZGlmZnMgPSBmaW5kRGlmZihjdXJyZW50LCByZWZlcmVuY2UpO1xuICAgICAgICAgICAgLy8gVE9ETzogbW9yZSBzbWFydCBkaWZmIGZ1bmN0aW9uXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkaWZmc1swXSk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhkaWZmc1sxXSk7XG4gICAgICAgIH1cbiAgICB9KTtcbn0pKCk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "match.spec.js"
      ],
      "names": [
        "fs",
        "require",
        "Builder",
        "By",
        "Key",
        "until",
        "chrome",
        "findDiff",
        "str1",
        "str2",
        "diff1",
        "diff2",
        "split",
        "forEach",
        "val",
        "i",
        "charAt",
        "recordTargetObject",
        "driver",
        "targetElement",
        "getAttribute",
        "outerHtml",
        "executeScript",
        "properties",
        "targetObject",
        "html",
        "cssProps",
        "childProps",
        "length",
        "getCssValue",
        "value",
        "findElements",
        "xpath",
        "childrens",
        "console",
        "log",
        "elem",
        "childHtml",
        "childProperties",
        "child",
        "push",
        "screen",
        "width",
        "height",
        "forBrowser",
        "setChromeOptions",
        "Options",
        "headless",
        "windowSize",
        "build",
        "get",
        "findElement",
        "className",
        "actions",
        "move",
        "origin",
        "perform",
        "targetObjectAfterAction",
        "trajectory",
        "initial",
        "afterAction",
        "current",
        "JSON",
        "stringify",
        "readFile",
        "err",
        "reference",
        "toString",
        "diffs",
        "checkMatch"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
      "sourcesContent": [
        "// selenium + mocha test for target behavior + DOM Tree matching\n\n// preserve visuals: compare DOM element (in interested area)\n// preserve behaviors: compare difference in DOM element\nconst fs = require(\"fs\");\nconst { Builder, By, Key, until } = require(\"selenium-webdriver\");\nconst chrome = require(\"selenium-webdriver/chrome\");\n\nfunction findDiff(str1, str2) {\n    let diff1 = \"\";\n    let diff2 = \"\";\n    str2.split(\"\").forEach(function (val, i) {\n        if (val != str1.charAt(i)) {\n            diff1 += val;\n            diff2 += str1.charAt(i);\n        }\n    });\n    return [diff1, diff2];\n}\n\nasync function recordTargetObject(driver, targetElement) {\n    let outerHtml = await targetElement.getAttribute(\"outerHTML\");\n    let properties = await driver.executeScript(\n        \"return window.getComputedStyle(arguments[0], null);\",\n        targetElement\n    );\n\n    // Contains all children's information as well\n    const targetObject = {\n        html: outerHtml,\n        cssProps: {},\n        childProps: [],\n    };\n\n    // console.log(`${properties}`);\n    for (let i = 0; i < properties.length; i++) {\n        let value = await targetElement.getCssValue(properties[i]);\n        // console.log(`${properties[i]}: ${value}`);\n        targetObject.cssProps[properties[i]] = value;\n    }\n\n    const childrens = await targetElement.findElements(By.xpath(\".//*\"));\n\n    console.log(`${childrens.length}`);\n    for (let i = 0; i < childrens.length; i++) {\n        let elem = childrens[i];\n        let childHtml = await elem.getAttribute(\"outerHTML\");\n        // console.log(`${childHtml}`);\n        let childProperties = await driver.executeScript(\n            \"return window.getComputedStyle(arguments[0], null);\",\n            elem\n        );\n\n        let child = {};\n        for (let i = 0; i < childProperties.length; i++) {\n            let value = await elem.getCssValue(childProperties[i]);\n            // console.log(`${childProperties[i]}: ${value}`);\n            child[childProperties[i]] = value;\n        }\n\n        targetObject.childProps.push(child);\n    }\n\n    return targetObject;\n}\n\n(async function checkMatch() {\n    const screen = {\n        width: 640,\n        height: 480,\n    };\n\n    let driver = await new Builder()\n        .forBrowser(\"chrome\")\n        .setChromeOptions(new chrome.Options().headless().windowSize(screen))\n        .build();\n\n    await driver.get(\"http://localhost:8080/intermediate.html\");\n    const targetElement = await driver.findElement(By.className(\"download\"));\n    // await targetElement.click();\n\n    const targetObject = await recordTargetObject(driver, targetElement);\n\n    const actions = driver.actions();\n    await actions.move({ origin: targetElement }).perform();\n\n    const targetObjectAfterAction = await recordTargetObject(\n        driver,\n        targetElement\n    );\n\n    // TODO: Need to be improved: save initial target element DOM and differences after\n    // Currently, simply save initial and after event DOM state for the target element (do not catch outside changes)\n    // If not use diff: should compare all DOM tree.. which is too costly\n    // How to capture diff? we should be able to captre dom modification callback event\n\n    const trajectory = {\n        initial: targetObject,\n        afterAction: targetObjectAfterAction,\n    };\n\n    // console.log(`${outerHtml}`);\n    const current = JSON.stringify(trajectory);\n    fs.readFile(\"targetElement.json\", (err, reference) => {\n        if (err) {\n            console.log(err);\n        }\n\n        reference = reference.toString();\n\n        if (current == reference) {\n            console.log(\"[Criteria Match] Target element remains the same\");\n        } else {\n            console.log(\"[Not Match] Target element changed\");\n            let diffs = findDiff(current, reference);\n            // TODO: more smart diff function\n            console.log(diffs[0]);\n            console.log(diffs[1]);\n        }\n    });\n})();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590712730698
  },
  "{\"sourceRoot\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid\",\"filename\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/record.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid",
      "filename": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/record.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/record.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/record.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
        "sourceFileName": "record.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nvar fs = require(\"fs\");\n\nvar _require = require(\"selenium-webdriver\"),\n    Builder = _require.Builder,\n    By = _require.By,\n    Key = _require.Key,\n    until = _require.until;\n\nvar chrome = require(\"selenium-webdriver/chrome\");\n\nfunction recordTargetObject(_x, _x2) {\n  return _recordTargetObject.apply(this, arguments);\n}\n\nfunction _recordTargetObject() {\n  _recordTargetObject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(driver, targetElement) {\n    var outerHtml, properties, targetObject, i, value, childrens, _i, elem, childHtml, childProperties, child, _i2, _value;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return targetElement.getAttribute(\"outerHTML\");\n\n          case 2:\n            outerHtml = _context2.sent;\n            _context2.next = 5;\n            return driver.executeScript(\"return window.getComputedStyle(arguments[0], null);\", targetElement);\n\n          case 5:\n            properties = _context2.sent;\n            // Contains all children's information as well\n            targetObject = {\n              html: outerHtml,\n              cssProps: {},\n              childProps: []\n            }; // console.log(`${properties}`);\n\n            i = 0;\n\n          case 8:\n            if (!(i < properties.length)) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 11;\n            return targetElement.getCssValue(properties[i]);\n\n          case 11:\n            value = _context2.sent;\n            // console.log(`${properties[i]}: ${value}`);\n            targetObject.cssProps[properties[i]] = value;\n\n          case 13:\n            i++;\n            _context2.next = 8;\n            break;\n\n          case 16:\n            _context2.next = 18;\n            return targetElement.findElements(By.xpath(\".//*\"));\n\n          case 18:\n            childrens = _context2.sent;\n            console.log(\"\".concat(childrens.length));\n            _i = 0;\n\n          case 21:\n            if (!(_i < childrens.length)) {\n              _context2.next = 43;\n              break;\n            }\n\n            elem = childrens[_i];\n            _context2.next = 25;\n            return elem.getAttribute(\"outerHTML\");\n\n          case 25:\n            childHtml = _context2.sent;\n            _context2.next = 28;\n            return driver.executeScript(\"return window.getComputedStyle(arguments[0], null);\", elem);\n\n          case 28:\n            childProperties = _context2.sent;\n            child = {};\n            _i2 = 0;\n\n          case 31:\n            if (!(_i2 < childProperties.length)) {\n              _context2.next = 39;\n              break;\n            }\n\n            _context2.next = 34;\n            return elem.getCssValue(childProperties[_i2]);\n\n          case 34:\n            _value = _context2.sent;\n            // console.log(`${childProperties[i]}: ${value}`);\n            child[childProperties[_i2]] = _value;\n\n          case 36:\n            _i2++;\n            _context2.next = 31;\n            break;\n\n          case 39:\n            targetObject.childProps.push(child);\n\n          case 40:\n            _i++;\n            _context2.next = 21;\n            break;\n\n          case 43:\n            return _context2.abrupt(\"return\", targetObject);\n\n          case 44:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _recordTargetObject.apply(this, arguments);\n}\n\n(function () {\n  var _checkMatch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var screen, driver, targetElement, targetObject, actions, targetObjectAfterAction, trajectory, originalTrajectory;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            screen = {\n              width: 640,\n              height: 480\n            };\n            _context.next = 3;\n            return new Builder().forBrowser(\"chrome\").setChromeOptions(new chrome.Options().headless().windowSize(screen)).build();\n\n          case 3:\n            driver = _context.sent;\n            _context.next = 6;\n            return driver.get(\"http://localhost:8080/intermediate.html\");\n\n          case 6:\n            _context.next = 8;\n            return driver.findElement(By.className(\"download\"));\n\n          case 8:\n            targetElement = _context.sent;\n            _context.next = 11;\n            return recordTargetObject(driver, targetElement);\n\n          case 11:\n            targetObject = _context.sent;\n            actions = driver.actions();\n            _context.next = 15;\n            return actions.move({\n              origin: targetElement\n            }).perform();\n\n          case 15:\n            _context.next = 17;\n            return recordTargetObject(driver, targetElement);\n\n          case 17:\n            targetObjectAfterAction = _context.sent;\n            // TODO: Need to be improved: save initial target element DOM and differences after\n            // Currently, simply save initial and after event DOM state for the target element (do not catch outside changes)\n            // If not use diff: should compare all DOM tree.. which is too costly\n            // How to capture diff? we should be able to captre dom modification callback event\n            trajectory = {\n              initial: targetObject,\n              afterAction: targetObjectAfterAction\n            }; // console.log(`${outerHtml}`);\n\n            originalTrajectory = JSON.stringify(trajectory);\n            fs.writeFile(\"targetElement.json\", originalTrajectory, function (err) {\n              if (err) {\n                console.log(err);\n              }\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  function checkMatch() {\n    return _checkMatch.apply(this, arguments);\n  }\n\n  return checkMatch;\n})()();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "record.js"
      ],
      "names": [
        "fs",
        "require",
        "Builder",
        "By",
        "Key",
        "until",
        "chrome",
        "recordTargetObject",
        "driver",
        "targetElement",
        "getAttribute",
        "outerHtml",
        "executeScript",
        "properties",
        "targetObject",
        "html",
        "cssProps",
        "childProps",
        "i",
        "length",
        "getCssValue",
        "value",
        "findElements",
        "xpath",
        "childrens",
        "console",
        "log",
        "elem",
        "childHtml",
        "childProperties",
        "child",
        "push",
        "screen",
        "width",
        "height",
        "forBrowser",
        "setChromeOptions",
        "Options",
        "headless",
        "windowSize",
        "build",
        "get",
        "findElement",
        "className",
        "actions",
        "move",
        "origin",
        "perform",
        "targetObjectAfterAction",
        "trajectory",
        "initial",
        "afterAction",
        "originalTrajectory",
        "JSON",
        "stringify",
        "writeFile",
        "err",
        "checkMatch"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
      "sourcesContent": [
        "const fs = require(\"fs\");\n\nconst { Builder, By, Key, until } = require(\"selenium-webdriver\");\nconst chrome = require(\"selenium-webdriver/chrome\");\n\nasync function recordTargetObject(driver, targetElement) {\n    let outerHtml = await targetElement.getAttribute(\"outerHTML\");\n    let properties = await driver.executeScript(\n        \"return window.getComputedStyle(arguments[0], null);\",\n        targetElement\n    );\n\n    // Contains all children's information as well\n    const targetObject = {\n        html: outerHtml,\n        cssProps: {},\n        childProps: [],\n    };\n\n    // console.log(`${properties}`);\n    for (let i = 0; i < properties.length; i++) {\n        let value = await targetElement.getCssValue(properties[i]);\n        // console.log(`${properties[i]}: ${value}`);\n        targetObject.cssProps[properties[i]] = value;\n    }\n\n    const childrens = await targetElement.findElements(By.xpath(\".//*\"));\n\n    console.log(`${childrens.length}`);\n    for (let i = 0; i < childrens.length; i++) {\n        let elem = childrens[i];\n        let childHtml = await elem.getAttribute(\"outerHTML\");\n        // console.log(`${childHtml}`);\n        let childProperties = await driver.executeScript(\n            \"return window.getComputedStyle(arguments[0], null);\",\n            elem\n        );\n\n        let child = {};\n        for (let i = 0; i < childProperties.length; i++) {\n            let value = await elem.getCssValue(childProperties[i]);\n            // console.log(`${childProperties[i]}: ${value}`);\n            child[childProperties[i]] = value;\n        }\n\n        targetObject.childProps.push(child);\n    }\n\n    return targetObject;\n}\n\n(async function checkMatch() {\n    const screen = {\n        width: 640,\n        height: 480,\n    };\n\n    let driver = await new Builder()\n        .forBrowser(\"chrome\")\n        .setChromeOptions(new chrome.Options().headless().windowSize(screen))\n        .build();\n\n    await driver.get(\"http://localhost:8080/intermediate.html\");\n    const targetElement = await driver.findElement(By.className(\"download\"));\n    // await targetElement.click();\n\n    const targetObject = await recordTargetObject(driver, targetElement);\n\n    const actions = driver.actions();\n    await actions.move({ origin: targetElement }).perform();\n\n    const targetObjectAfterAction = await recordTargetObject(\n        driver,\n        targetElement\n    );\n\n    // TODO: Need to be improved: save initial target element DOM and differences after\n    // Currently, simply save initial and after event DOM state for the target element (do not catch outside changes)\n    // If not use diff: should compare all DOM tree.. which is too costly\n    // How to capture diff? we should be able to captre dom modification callback event\n\n    const trajectory = {\n        initial: targetObject,\n        afterAction: targetObjectAfterAction,\n    };\n\n    // console.log(`${outerHtml}`);\n    const originalTrajectory = JSON.stringify(trajectory);\n    fs.writeFile(\"targetElement.json\", originalTrajectory, (err) => {\n        if (err) {\n            console.log(err);\n        }\n    });\n})();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590712743540
  },
  "{\"sourceRoot\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid\",\"filename\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match_orbs.spec.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.1": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid",
      "filename": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match_orbs.spec.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match_orbs.spec.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/match_orbs.spec.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
        "sourceFileName": "match_orbs.spec.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\n// selenium + mocha test for target behavior + DOM Tree matching\n// preserve visuals: compare DOM element (in interested area)\n// preserve behaviors: compare difference in DOM element\nvar fs = require(\"fs\");\n\nvar _require = require(\"selenium-webdriver\"),\n    Builder = _require.Builder,\n    By = _require.By,\n    Key = _require.Key,\n    until = _require.until;\n\nvar chrome = require(\"selenium-webdriver/chrome\");\n\nfunction findDiff(str1, str2) {\n  var diff1 = \"\";\n  var diff2 = \"\";\n  str2.split(\"\").forEach(function (val, i) {\n    if (val != str1.charAt(i)) {\n      diff1 += val;\n      diff2 += str1.charAt(i);\n    }\n  });\n  return [diff1, diff2];\n}\n\nfunction recordTargetObject(_x, _x2) {\n  return _recordTargetObject.apply(this, arguments);\n}\n\nfunction _recordTargetObject() {\n  _recordTargetObject = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(driver, targetElement) {\n    var outerHtml, properties, targetObject, i, value, childrens, _i, elem, childHtml, childProperties, child, _i2, _value;\n\n    return regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return targetElement.getAttribute(\"outerHTML\");\n\n          case 2:\n            outerHtml = _context2.sent;\n            _context2.next = 5;\n            return driver.executeScript(\"return window.getComputedStyle(arguments[0], null);\", targetElement);\n\n          case 5:\n            properties = _context2.sent;\n            // Contains all children's information as well\n            targetObject = {\n              html: outerHtml,\n              cssProps: {},\n              childProps: []\n            }; // console.log(`${properties}`);\n\n            i = 0;\n\n          case 8:\n            if (!(i < properties.length)) {\n              _context2.next = 16;\n              break;\n            }\n\n            _context2.next = 11;\n            return targetElement.getCssValue(properties[i]);\n\n          case 11:\n            value = _context2.sent;\n            // console.log(`${properties[i]}: ${value}`);\n            targetObject.cssProps[properties[i]] = value;\n\n          case 13:\n            i++;\n            _context2.next = 8;\n            break;\n\n          case 16:\n            _context2.next = 18;\n            return targetElement.findElements(By.xpath(\".//*\"));\n\n          case 18:\n            childrens = _context2.sent;\n            console.log(\"\".concat(childrens.length));\n            _i = 0;\n\n          case 21:\n            if (!(_i < childrens.length)) {\n              _context2.next = 43;\n              break;\n            }\n\n            elem = childrens[_i];\n            _context2.next = 25;\n            return elem.getAttribute(\"outerHTML\");\n\n          case 25:\n            childHtml = _context2.sent;\n            _context2.next = 28;\n            return driver.executeScript(\"return window.getComputedStyle(arguments[0], null);\", elem);\n\n          case 28:\n            childProperties = _context2.sent;\n            child = {};\n            _i2 = 0;\n\n          case 31:\n            if (!(_i2 < childProperties.length)) {\n              _context2.next = 39;\n              break;\n            }\n\n            _context2.next = 34;\n            return elem.getCssValue(childProperties[_i2]);\n\n          case 34:\n            _value = _context2.sent;\n            // console.log(`${childProperties[i]}: ${value}`);\n            child[childProperties[_i2]] = _value;\n\n          case 36:\n            _i2++;\n            _context2.next = 31;\n            break;\n\n          case 39:\n            targetObject.childProps.push(child);\n\n          case 40:\n            _i++;\n            _context2.next = 21;\n            break;\n\n          case 43:\n            return _context2.abrupt(\"return\", targetObject);\n\n          case 44:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _recordTargetObject.apply(this, arguments);\n}\n\n(function () {\n  var _checkMatch = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n    var screen, driver, targetElement, targetObject, actions, targetObjectAfterAction, trajectory, current;\n    return regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            screen = {\n              width: 640,\n              height: 480\n            };\n            _context.next = 3;\n            return new Builder().forBrowser(\"chrome\").setChromeOptions(new chrome.Options().headless().windowSize(screen)).build();\n\n          case 3:\n            driver = _context.sent;\n            _context.next = 6;\n            return driver.get(\"http://localhost:8080/intermediate_orbs.html\");\n\n          case 6:\n            _context.next = 8;\n            return driver.findElement(By.className(\"download\"));\n\n          case 8:\n            targetElement = _context.sent;\n            _context.next = 11;\n            return recordTargetObject(driver, targetElement);\n\n          case 11:\n            targetObject = _context.sent;\n            actions = driver.actions();\n            _context.next = 15;\n            return actions.move({\n              origin: targetElement\n            }).perform();\n\n          case 15:\n            _context.next = 17;\n            return recordTargetObject(driver, targetElement);\n\n          case 17:\n            targetObjectAfterAction = _context.sent;\n            // TODO: Need to be improved: save initial target element DOM and differences after\n            // Currently, simply save initial and after event DOM state for the target element (do not catch outside changes)\n            // If not use diff: should compare all DOM tree.. which is too costly\n            // How to capture diff? we should be able to captre dom modification callback event\n            trajectory = {\n              initial: targetObject,\n              afterAction: targetObjectAfterAction\n            }; // console.log(`${outerHtml}`);\n\n            current = JSON.stringify(trajectory);\n            fs.readFile(\"targetElement.json\", function (err, reference) {\n              if (err) {\n                console.log(err);\n              }\n\n              reference = reference.toString();\n\n              if (current == reference) {\n                console.log(\"[Criteria Match] Target element remains the same\");\n              } else {\n                console.log(\"[Not Match] Target element changed\");\n                var diffs = findDiff(current, reference); // TODO: more smart diff function\n\n                console.log(diffs[0]);\n                console.log(diffs[1]);\n              }\n            });\n\n          case 21:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  function checkMatch() {\n    return _checkMatch.apply(this, arguments);\n  }\n\n  return checkMatch;\n})()();\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "match_orbs.spec.js"
      ],
      "names": [
        "fs",
        "require",
        "Builder",
        "By",
        "Key",
        "until",
        "chrome",
        "findDiff",
        "str1",
        "str2",
        "diff1",
        "diff2",
        "split",
        "forEach",
        "val",
        "i",
        "charAt",
        "recordTargetObject",
        "driver",
        "targetElement",
        "getAttribute",
        "outerHtml",
        "executeScript",
        "properties",
        "targetObject",
        "html",
        "cssProps",
        "childProps",
        "length",
        "getCssValue",
        "value",
        "findElements",
        "xpath",
        "childrens",
        "console",
        "log",
        "elem",
        "childHtml",
        "childProperties",
        "child",
        "push",
        "screen",
        "width",
        "height",
        "forBrowser",
        "setChromeOptions",
        "Options",
        "headless",
        "windowSize",
        "build",
        "get",
        "findElement",
        "className",
        "actions",
        "move",
        "origin",
        "perform",
        "targetObjectAfterAction",
        "trajectory",
        "initial",
        "afterAction",
        "current",
        "JSON",
        "stringify",
        "readFile",
        "err",
        "reference",
        "toString",
        "diffs",
        "checkMatch"
      ],
      "mappings": ";;;;;;AAAA;AAEA;AACA;AACA,IAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;eACoCA,OAAO,CAAC,oBAAD,C;IAAnCC,O,YAAAA,O;IAASC,E,YAAAA,E;IAAIC,G,YAAAA,G;IAAKC,K,YAAAA,K;;AAC1B,IAAMC,MAAM,GAAGL,OAAO,CAAC,2BAAD,CAAtB;;AAEA,SAASM,QAAT,CAAkBC,IAAlB,EAAwBC,IAAxB,EAA8B;AAC1B,MAAIC,KAAK,GAAG,EAAZ;AACA,MAAIC,KAAK,GAAG,EAAZ;AACAF,EAAAA,IAAI,CAACG,KAAL,CAAW,EAAX,EAAeC,OAAf,CAAuB,UAAUC,GAAV,EAAeC,CAAf,EAAkB;AACrC,QAAID,GAAG,IAAIN,IAAI,CAACQ,MAAL,CAAYD,CAAZ,CAAX,EAA2B;AACvBL,MAAAA,KAAK,IAAII,GAAT;AACAH,MAAAA,KAAK,IAAIH,IAAI,CAACQ,MAAL,CAAYD,CAAZ,CAAT;AACH;AACJ,GALD;AAMA,SAAO,CAACL,KAAD,EAAQC,KAAR,CAAP;AACH;;SAEcM,kB;;;;;gFAAf,kBAAkCC,MAAlC,EAA0CC,aAA1C;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAC0BA,aAAa,CAACC,YAAd,CAA2B,WAA3B,CAD1B;;AAAA;AACQC,YAAAA,SADR;AAAA;AAAA,mBAE2BH,MAAM,CAACI,aAAP,CACnB,qDADmB,EAEnBH,aAFmB,CAF3B;;AAAA;AAEQI,YAAAA,UAFR;AAOI;AACMC,YAAAA,YARV,GAQyB;AACjBC,cAAAA,IAAI,EAAEJ,SADW;AAEjBK,cAAAA,QAAQ,EAAE,EAFO;AAGjBC,cAAAA,UAAU,EAAE;AAHK,aARzB,EAcI;;AACSZ,YAAAA,CAfb,GAeiB,CAfjB;;AAAA;AAAA,kBAeoBA,CAAC,GAAGQ,UAAU,CAACK,MAfnC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAgB0BT,aAAa,CAACU,WAAd,CAA0BN,UAAU,CAACR,CAAD,CAApC,CAhB1B;;AAAA;AAgBYe,YAAAA,KAhBZ;AAiBQ;AACAN,YAAAA,YAAY,CAACE,QAAb,CAAsBH,UAAU,CAACR,CAAD,CAAhC,IAAuCe,KAAvC;;AAlBR;AAe2Cf,YAAAA,CAAC,EAf5C;AAAA;AAAA;;AAAA;AAAA;AAAA,mBAqB4BI,aAAa,CAACY,YAAd,CAA2B5B,EAAE,CAAC6B,KAAH,CAAS,MAAT,CAA3B,CArB5B;;AAAA;AAqBUC,YAAAA,SArBV;AAuBIC,YAAAA,OAAO,CAACC,GAAR,WAAeF,SAAS,CAACL,MAAzB;AACSb,YAAAA,EAxBb,GAwBiB,CAxBjB;;AAAA;AAAA,kBAwBoBA,EAAC,GAAGkB,SAAS,CAACL,MAxBlC;AAAA;AAAA;AAAA;;AAyBYQ,YAAAA,IAzBZ,GAyBmBH,SAAS,CAAClB,EAAD,CAzB5B;AAAA;AAAA,mBA0B8BqB,IAAI,CAAChB,YAAL,CAAkB,WAAlB,CA1B9B;;AAAA;AA0BYiB,YAAAA,SA1BZ;AAAA;AAAA,mBA4BoCnB,MAAM,CAACI,aAAP,CACxB,qDADwB,EAExBc,IAFwB,CA5BpC;;AAAA;AA4BYE,YAAAA,eA5BZ;AAiCYC,YAAAA,KAjCZ,GAiCoB,EAjCpB;AAkCiBxB,YAAAA,GAlCjB,GAkCqB,CAlCrB;;AAAA;AAAA,kBAkCwBA,GAAC,GAAGuB,eAAe,CAACV,MAlC5C;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAmC8BQ,IAAI,CAACP,WAAL,CAAiBS,eAAe,CAACvB,GAAD,CAAhC,CAnC9B;;AAAA;AAmCgBe,YAAAA,MAnChB;AAoCY;AACAS,YAAAA,KAAK,CAACD,eAAe,CAACvB,GAAD,CAAhB,CAAL,GAA4Be,MAA5B;;AArCZ;AAkCoDf,YAAAA,GAAC,EAlCrD;AAAA;AAAA;;AAAA;AAwCQS,YAAAA,YAAY,CAACG,UAAb,CAAwBa,IAAxB,CAA6BD,KAA7B;;AAxCR;AAwB0CxB,YAAAA,EAAC,EAxB3C;AAAA;AAAA;;AAAA;AAAA,8CA2CWS,YA3CX;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G;;;;AA8CA;AAAA,4EAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AACSiB,YAAAA,MADT,GACkB;AACXC,cAAAA,KAAK,EAAE,GADI;AAEXC,cAAAA,MAAM,EAAE;AAFG,aADlB;AAAA;AAAA,mBAMsB,IAAIzC,OAAJ,GACd0C,UADc,CACH,QADG,EAEdC,gBAFc,CAEG,IAAIvC,MAAM,CAACwC,OAAX,GAAqBC,QAArB,GAAgCC,UAAhC,CAA2CP,MAA3C,CAFH,EAGdQ,KAHc,EANtB;;AAAA;AAMO/B,YAAAA,MANP;AAAA;AAAA,mBAWSA,MAAM,CAACgC,GAAP,CAAW,8CAAX,CAXT;;AAAA;AAAA;AAAA,mBAY+BhC,MAAM,CAACiC,WAAP,CAAmBhD,EAAE,CAACiD,SAAH,CAAa,UAAb,CAAnB,CAZ/B;;AAAA;AAYSjC,YAAAA,aAZT;AAAA;AAAA,mBAe8BF,kBAAkB,CAACC,MAAD,EAASC,aAAT,CAfhD;;AAAA;AAeSK,YAAAA,YAfT;AAiBS6B,YAAAA,OAjBT,GAiBmBnC,MAAM,CAACmC,OAAP,EAjBnB;AAAA;AAAA,mBAkBSA,OAAO,CAACC,IAAR,CAAa;AAAEC,cAAAA,MAAM,EAAEpC;AAAV,aAAb,EAAwCqC,OAAxC,EAlBT;;AAAA;AAAA;AAAA,mBAoByCvC,kBAAkB,CACpDC,MADoD,EAEpDC,aAFoD,CApB3D;;AAAA;AAoBSsC,YAAAA,uBApBT;AAyBG;AACA;AACA;AACA;AAEMC,YAAAA,UA9BT,GA8BsB;AACfC,cAAAA,OAAO,EAAEnC,YADM;AAEfoC,cAAAA,WAAW,EAAEH;AAFE,aA9BtB,EAmCG;;AACMI,YAAAA,OApCT,GAoCmBC,IAAI,CAACC,SAAL,CAAeL,UAAf,CApCnB;AAqCG1D,YAAAA,EAAE,CAACgE,QAAH,CAAY,oBAAZ,EAAkC,UAACC,GAAD,EAAMC,SAAN,EAAoB;AAClD,kBAAID,GAAJ,EAAS;AACL/B,gBAAAA,OAAO,CAACC,GAAR,CAAY8B,GAAZ;AACH;;AAEDC,cAAAA,SAAS,GAAGA,SAAS,CAACC,QAAV,EAAZ;;AAEA,kBAAIN,OAAO,IAAIK,SAAf,EAA0B;AACtBhC,gBAAAA,OAAO,CAACC,GAAR,CAAY,kDAAZ;AACH,eAFD,MAEO;AACHD,gBAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACA,oBAAIiC,KAAK,GAAG7D,QAAQ,CAACsD,OAAD,EAAUK,SAAV,CAApB,CAFG,CAGH;;AACAhC,gBAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAK,CAAC,CAAD,CAAjB;AACAlC,gBAAAA,OAAO,CAACC,GAAR,CAAYiC,KAAK,CAAC,CAAD,CAAjB;AACH;AACJ,aAhBD;;AArCH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAD;;AAAA,WAAgBC,UAAhB;AAAA;AAAA;;AAAA,SAAgBA,UAAhB;AAAA",
      "sourceRoot": "/Users/juyeonyoon/Projects/orbs-py/target/three_column_layout_liquid/",
      "sourcesContent": [
        "// selenium + mocha test for target behavior + DOM Tree matching\n\n// preserve visuals: compare DOM element (in interested area)\n// preserve behaviors: compare difference in DOM element\nconst fs = require(\"fs\");\nconst { Builder, By, Key, until } = require(\"selenium-webdriver\");\nconst chrome = require(\"selenium-webdriver/chrome\");\n\nfunction findDiff(str1, str2) {\n    let diff1 = \"\";\n    let diff2 = \"\";\n    str2.split(\"\").forEach(function (val, i) {\n        if (val != str1.charAt(i)) {\n            diff1 += val;\n            diff2 += str1.charAt(i);\n        }\n    });\n    return [diff1, diff2];\n}\n\nasync function recordTargetObject(driver, targetElement) {\n    let outerHtml = await targetElement.getAttribute(\"outerHTML\");\n    let properties = await driver.executeScript(\n        \"return window.getComputedStyle(arguments[0], null);\",\n        targetElement\n    );\n\n    // Contains all children's information as well\n    const targetObject = {\n        html: outerHtml,\n        cssProps: {},\n        childProps: [],\n    };\n\n    // console.log(`${properties}`);\n    for (let i = 0; i < properties.length; i++) {\n        let value = await targetElement.getCssValue(properties[i]);\n        // console.log(`${properties[i]}: ${value}`);\n        targetObject.cssProps[properties[i]] = value;\n    }\n\n    const childrens = await targetElement.findElements(By.xpath(\".//*\"));\n\n    console.log(`${childrens.length}`);\n    for (let i = 0; i < childrens.length; i++) {\n        let elem = childrens[i];\n        let childHtml = await elem.getAttribute(\"outerHTML\");\n        // console.log(`${childHtml}`);\n        let childProperties = await driver.executeScript(\n            \"return window.getComputedStyle(arguments[0], null);\",\n            elem\n        );\n\n        let child = {};\n        for (let i = 0; i < childProperties.length; i++) {\n            let value = await elem.getCssValue(childProperties[i]);\n            // console.log(`${childProperties[i]}: ${value}`);\n            child[childProperties[i]] = value;\n        }\n\n        targetObject.childProps.push(child);\n    }\n\n    return targetObject;\n}\n\n(async function checkMatch() {\n    const screen = {\n        width: 640,\n        height: 480,\n    };\n\n    let driver = await new Builder()\n        .forBrowser(\"chrome\")\n        .setChromeOptions(new chrome.Options().headless().windowSize(screen))\n        .build();\n\n    await driver.get(\"http://localhost:8080/intermediate_orbs.html\");\n    const targetElement = await driver.findElement(By.className(\"download\"));\n    // await targetElement.click();\n\n    const targetObject = await recordTargetObject(driver, targetElement);\n\n    const actions = driver.actions();\n    await actions.move({ origin: targetElement }).perform();\n\n    const targetObjectAfterAction = await recordTargetObject(\n        driver,\n        targetElement\n    );\n\n    // TODO: Need to be improved: save initial target element DOM and differences after\n    // Currently, simply save initial and after event DOM state for the target element (do not catch outside changes)\n    // If not use diff: should compare all DOM tree.. which is too costly\n    // How to capture diff? we should be able to captre dom modification callback event\n\n    const trajectory = {\n        initial: targetObject,\n        afterAction: targetObjectAfterAction,\n    };\n\n    // console.log(`${outerHtml}`);\n    const current = JSON.stringify(trajectory);\n    fs.readFile(\"targetElement.json\", (err, reference) => {\n        if (err) {\n            console.log(err);\n        }\n\n        reference = reference.toString();\n\n        if (current == reference) {\n            console.log(\"[Criteria Match] Target element remains the same\");\n        } else {\n            console.log(\"[Not Match] Target element changed\");\n            let diffs = findDiff(current, reference);\n            // TODO: more smart diff function\n            console.log(diffs[0]);\n            console.log(diffs[1]);\n        }\n    });\n})();\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1590712866867
  }
}